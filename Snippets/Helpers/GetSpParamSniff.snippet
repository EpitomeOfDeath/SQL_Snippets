<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="https://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<_locDefinition xmlns="urn:locstudio">
		<_locDefault _loc="locNone" />
		<_locTag _loc="locData">Title</_locTag>
		<_locTag _loc="locData">Description</_locTag>
		<_locTag _loc="locData">Author</_locTag>
		<_locTag _loc="locData">ToolTip</_locTag>
		<_locTag _loc="locData">Default</_locTag>
	</_locDefinition>
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>GetSpParamSniff</Title>
			<Shortcut>spsnf</Shortcut>
			<Description>Get paramete sniffing aid for a stored procedure</Description>
			<Author>Micael Uthas (uthas.com)</Author>
			<SnippetTypes>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Declarations>
				<Literal>
					<ID>StoredProcedure</ID>
					<ToolTip>StoredProcedure name</ToolTip>
					<Default>MySp</Default>
				</Literal>

			</Declarations>
			<Code Language="SQL">
				<![CDATA[
/*
	Enter the name of an existing stored procedure.
	Enter a the spacing you prefer.

	Generates:
	1. CodeList for a parameter sniffing handler.

	Author:Micael Uthas (uthas.com)
*/
DECLARE
	@spName SYSNAME = '' --Enter Sp Name here.
	, @Spacing INT = 3

DECLARE @t Table
(
	ParameterName NVARCHAR(1024)
	, workParameterDeclare NVARCHAR(1024)
	, workParameterVar NVARCHAR(1024)
	, Code NVARCHAR(1024)
	, RowNo int IDENTITY(1, 1)
)

INSERT INTO @t
SELECT
	PARAMETER_NAME
	, REPLACE(PARAMETER_NAME, '@', '@wrk')
	+ ' '
	+ UPPER(ISNULL(USER_DEFINED_TYPE_NAME, DATA_TYPE))
	+ CASE
		WHEN CHARACTER_MAXIMUM_LENGTH IS NOT NULL THEN
			'(' + IIF(CHARACTER_MAXIMUM_LENGTH = -1, 'MAX', CONVERT(VARCHAR, CHARACTER_MAXIMUM_LENGTH)) + ')'
		WHEN NUMERIC_PRECISION IS NOT NULL AND NUMERIC_SCALE > 0 AND CHARINDEX('MONEY', DATA_TYPE) = 0 THEN
			'(' + CONVERT(VARCHAR, NUMERIC_PRECISION) + ', ' + CONVERT(VARCHAR, NUMERIC_SCALE) + ')'
		WHEN DATETIME_PRECISION IS NOT NULL AND DATA_TYPE != 'DATETIME' THEN
			'(' + CONVERT(VARCHAR, DATETIME_PRECISION) + ')'
		ELSE
			''
		END
	, REPLACE(PARAMETER_NAME, '@', '@wrk')
	, NULL 
FROM
	INFORMATION_SCHEMA.PARAMETERS
WHERE
	SPECIFIC_NAME = @spName

UPDATE @t SET Code = 'SET ' + workParameterVar + ' = ' + ParameterName

SELECT
	Code
FROM
(
SELECT
	'/************* Parameter Sniffing *************/' AS Code
	, -1 AS RowNo
	, 0 AS Grp
UNION
SELECT
	'DECLARE'
	, 0
	, 0
UNION
SELECT
	SPACE(@Spacing) + IIF(RowNo != 1, ', ', '')
	+ workParameterDeclare
	, RowNo
	, 1
FROM
	@t
UNION
SELECT
	''
	, MAX(RowNo) + 1
	, 2
FROM
	@t
UNION
SELECT
	Code
	, RowNo
	, 3
FROM
	@t
UNION
Select
	'/************* Parameter Sniffing *************/'
	, 999
	, 4
) c
ORDER BY Grp, RowNo
]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>
