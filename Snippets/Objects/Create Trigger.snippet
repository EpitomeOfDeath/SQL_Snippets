<?xml version="1.0" encoding="utf-8" ?>  
<CodeSnippets  xmlns="https://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">  
<_locDefinition xmlns="urn:locstudio">  
    <_locDefault _loc="locNone" />  
    <_locTag _loc="locData">Title</_locTag>  
    <_locTag _loc="locData">Description</_locTag>  
    <_locTag _loc="locData">Your Name</_locTag>  
    <_locTag _loc="locData">ToolTip</_locTag>  
   <_locTag _loc="locData">Default</_locTag>  
</_locDefinition>  
<CodeSnippet Format="1.0.0">  
<Header>  
<Title>Create Trigger</Title>  
                        <Shortcut>CRTR</Shortcut>  
<Description>Creates a trigger</Description>  
<Author>Your Name</Author>  
<SnippetTypes>  
                                <SnippetType>SurroundsWith</SnippetType>  
</SnippetTypes>  
</Header>  
<Snippet>  
<Declarations>  
  <Literal>  
  <ID>TableName</ID>  
  <ToolTip>Name of the table</ToolTip>  
  <Default>TLE_REPLACE_TABLE</Default>  
  </Literal>
  <Literal>
    <ID>TriggerType</ID>
    <ToolTip>Insert, Delete, Update</ToolTip>
    <Default>TriggerType</Default>
  </Literal>
  <Literal>
    <ID>Your Name</ID>
    <ToolTip>Name of author</ToolTip>
    <Default>Your Name</Default>
  </Literal>
</Declarations>  
<Code Language="SQL">
  <![CDATA[SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/*
EXEC $ProcedureName$
	@ProjectId = NULL
	, @ItemTypeId  = NULL
------------------------------------------------------------------------------------------------------
Description: 
Created by:
  
Changes
Who     When        What
------------------------------------------------------------------------------------------------------
*/
CREATE OR ALTER trigger $TableName$_$TriggerType$
	ON $TableName$ 
	FOR $TriggerType$
AS
BEGIN
  DECLARE
	@ErrMsg               NVARCHAR(max)
    , @Message            NVARCHAR(max)
    , @Enter_Trancount    INT
    , @NestLevel          VARCHAR(10)
		  					
  SELECT
	@Enter_Trancount = @@TRANCOUNT
	, @ErrMsg = ''
	, @Nestlevel = CONVERT(VARCHAR(10), @@nestlevel)

  --IF UPDATE(No_Trigger_Exec) --Manage recursivity
  --  RETURN
		
  DECLARE CC_crs_$TableName$ CURSOR LOCAL STATIC FORWARD_ONLY FOR
  SELECT 
	'acolvalue' AS TrgCol
  FROM
	$TriggerType$ed
  WHERE 
	1 = 1
  OPEN CC_crs_$TableName$
  WHILE 1 = 1
  BEGIN
	  FETCH NEXT FROM CC_crs_$TableName$ INTO
		@TrgCol
	  IF @@FETCH_STATUS<>0
		BREAK
	  
	  --DoStuff
  END
  CLOSE CC_crs_$TableName$ DEALLOCATE CC_crs_$TableName$
    
END]]>  
</Code>  
</Snippet>  
</CodeSnippet>  
</CodeSnippets>  