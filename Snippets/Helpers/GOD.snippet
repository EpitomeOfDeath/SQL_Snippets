<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="https://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<_locDefinition xmlns="urn:locstudio">
		<_locDefault _loc="locNone" />
		<_locTag _loc="locData">Title</_locTag>
		<_locTag _loc="locData">Description</_locTag>
		<_locTag _loc="locData">Author</_locTag>
		<_locTag _loc="locData">ToolTip</_locTag>
		<_locTag _loc="locData">Default</_locTag>
	</_locDefinition>
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>GOD</Title>
			<Shortcut>GOD</Shortcut>
			<Description>Find objects by code</Description>
			<Author>Your Name</Author>
			<SnippetTypes>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Declarations>
				<Literal>
					<ID>SearchString1</ID>
					<ToolTip>SearchString 1</ToolTip>
					<Default>XYZ1</Default>
				</Literal>
				<Literal>
					<ID>SearchString2</ID>
					<ToolTip>SearchString 2</ToolTip>
					<Default>XYZ2</Default>
				</Literal>
				<Literal>
					<ID>ExcludedObjectNames</ID>
					<ToolTip>ExcludedObjectNames</ToolTip>
					<Default></Default>
				</Literal>
				<Literal>
					<ID>ExcludeNameContaining</ID>
					<ToolTip>ExcludeNameContaining</ToolTip>
					<Default></Default>
				</Literal>

			</Declarations>
			<Code Language="SQL">
				<![CDATA[
/*
	Enter the text to find in @SearchString1.
	if you want to combine two texts add the second text in @SearchString2.
	Enter excluded object names as a commaseparated list in @ExcludeObjectNames
	Enter the part of object names that should be excluded in @ExcludeNameContaining

	Finds:
	Objects with the searched text in itÂ´s code.

	Author:Micael Uthas (uthas.com)
*/
DECLARE
@SearchString1 NVARCHAR(255) = ''
, @SearchString2 NVARCHAR(255) = ''
, @ExcludeObjectNames NVARCHAR(max) = ''
, @ExcludeNameContaining NVARCHAR(1024) = ''

IF @SearchString1 IS NULL SET @SearchString1 = 'XYZ'
IF @SearchString2 IS NULL SET @SearchString2 = 'XYZ'


DECLARE @Exlude TABLE
(
	ObjectName sysname
)

If(ISNULL(@ExcludeObjectNames, '') != '')
	SET @ExcludeObjectNames = CHAR(39) + REPLACE(@ExcludeObjectNames, CHAR(32), '') + CHAR(39)

DECLARE @Ret
	TABLE
	(
		ObjectType NVARCHAR(255) null
		, ObjectName NVARCHAR(255) null
		, ObjectId int null
		, CreateDate datetime null
		, ModifyDate datetime null
	)


DECLARE
@cmd NVARCHAR(max)
, @Params NVARCHAR(255) = '@DynWebScriptExists int out'
, @ScriptDatabase NVARCHAR(255)
, @DynWebScriptExists int = 0
, @dfn CHAR(2) =  CHAR(39) + CHAR(39)

SET @Cmd = 'SELECT
	t.type
	, t.name
	, t.object_id
	, t.create_date
	, t.modify_date
FROM
	sys.sql_modules m
INNER JOIN
	sys.objects t
		ON t.object_id=m.object_id 
WHERE
	(REPLACE(REPLACE(REPLACE(REPLACE(definition, CHAR(10), ' + @dfn + '), CHAR(13), ' + @dfn + '), CHAR(9), ' + @dfn + '), CHAR(32), ' + @dfn + ') LIKE ' + CHAR(39) +  '%' + @SearchString1 + '%'  + CHAR(39)

IF(NULLIF(@SearchString2, '') IS NOT NULL)
	SET @Cmd = @Cmd
	+ CHAR(10) + 'OR REPLACE(REPLACE(REPLACE(REPLACE(definition, CHAR(10), ' + @dfn + '), CHAR(13), ' + @dfn + '), CHAR(9), ' + @dfn + '), CHAR(32), ' + @dfn + ') LIKE ' + CHAR(39) +  '%' + @SearchString2 + '%'  + CHAR(39)

IF(ISNULL(@ExcludeObjectNames, '') != '')
	SET @Cmd = @Cmd
	+ CHAR(10) + ' AND NOT EXISTS(SELECT 1 FROM string_split(' + @ExcludeObjectNames + ', '','') WHERE [Value] = t.name)'

SET @Cmd = @Cmd + ')'

IF(ISNULL(@ExcludeNameContaining, '') != '')
	SET @Cmd = @Cmd
	+ CHAR(10) + 'AND RIGHT(t.Name, ' + CONVERT(VARCHAR, LEN(@ExcludeNameContaining)) + ') != ' + CHAR(39) + @ExcludeNameContaining + CHAR(39)

SET @Cmd = @Cmd
+ CHAR(10) + 'ORDER BY t.name'

INSERT INTO @Ret
EXEC Sp_ExecuteSql @Cmd

SELECT
	*
FROM
	@ret


]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>
